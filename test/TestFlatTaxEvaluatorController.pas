unit TestFlatTaxEvaluatorController;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, InterfaceSalaryEvaluatorController, SalaryEntities,
  FlatTaxEvaluatorController;

type
  // Test methods for class TFlatTaxEvaluatorController

  TestTFlatTaxEvaluatorController = class(TTestCase)
  strict private
    FFlatTaxEvaluatorController: TFlatTaxEvaluatorController;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestEvaluate;
  end;

implementation

procedure TestTFlatTaxEvaluatorController.SetUp;
begin
  FFlatTaxEvaluatorController := TFlatTaxEvaluatorController.Create;
end;

procedure TestTFlatTaxEvaluatorController.TearDown;
begin
  FFlatTaxEvaluatorController.Free;
  FFlatTaxEvaluatorController := nil;
end;

procedure TestTFlatTaxEvaluatorController.TestEvaluate;
var
  ReturnValue: Boolean;
  p_Salary: TSalary;
  p_Res: Single;
begin
  p_Salary.Brutto           := 10000.00;
  p_Salary.Vat              := 1000.00;
  p_Salary.Podatek          := 1000.00;
  p_Salary.ZUS              := 1000.00;
  p_Salary.SkladkaZdrowotna := 1000.00;

  p_Salary.DniRoboczych       := 20;
  p_Salary.DniPrzepracowanych := 15;

  ReturnValue := FFlatTaxEvaluatorController.Evaluate(p_Salary);

  p_Res := 6733.33;

  CheckEquals(p_Res, p_Salary.DoRozdysponowania);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTFlatTaxEvaluatorController.Suite);
end.

